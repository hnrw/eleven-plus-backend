// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String       @id @default(uuid())
  email          String       @unique
  firstName      String?
  lastName       String?
  parentName     String
  dob            Int?
  gender         String?
  passwordHash   String
  profilePicture String?
  stripeId       String?
  subEnds        Int?
  score          Float?
  date           Int
  answers        Answer[]
  gradedTests    GradedTest[]
  testSession    TestSession?
}

model Test {
  id           String        @id @default(uuid())
  num          Int           @unique
  date         Int
  problems     Problem[]
  gradedTests  GradedTest[]
  testSessions TestSession[]
}

model Problem {
  id      String   @id @default(uuid())
  multi   Boolean
  correct String
  options String[]
  unit    String?
  num     Int
  img     String?
  date    Int
  test    Test     @relation(fields: [testId], references: [id])
  testId  String
  answers Answer[]
}

model Answer {
  id        String  @id @default(uuid())
  selected  String?
  date      Int
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  problem   Problem @relation(fields: [problemId], references: [id])
  problemId String
}

model GradedTest {
  id      String @id @default(uuid())
  marks   Int
  total   Int
  percent Float
  num     Int
  date    Int
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  test    Test   @relation(fields: [testId], references: [id])
  testId  String
}

model BouncedUser {
  id         String @id @default(uuid())
  email      String
  parentName String
  date       Int
}

model TestSession {
  id     String  @id @default(uuid())
  start  Int
  user   User    @relation(fields: [userId], references: [id])
  userId String
  Test   Test?   @relation(fields: [testId], references: [id])
  testId String?
}
